Maps
ECMAScript 2015 introduces a new data structure to map values to values.
A Map object is a simple key/value map and can iterate its elements in insertion order(same as inserted).

var sayings = new Map();
sayings.set('dog', 'woof');
sayings.set('cat', 'meow');
sayings.set('elephant', 'toot');
sayings.size; // 3
sayings.get('fox'); // undefined
sayings.has('bird'); // false
sayings.delete('dog');
sayings.has('dog'); // false

for (var [key, value] of sayings) {
  console.log(key + ' goes ' + value);
}
// "cat goes meow"
// "elephant goes toot"

sayings.clear();
sayings.size; // 0

_______________________________________________________________________________________________________________________


The Difference Between Arrays and Objects
In JavaScript, arrays use numbered indexes.  

In JavaScript, objects use named indexes.

Arrays are a special kind of objects, with numbered indexes.

_______________________________________________________________________________________________________________________


when to use map and object


Use maps over objects when keys are unknown until run time, 
and when all keys are the same type and all values are the same type.


Use maps if there is a need to store primitive values as keys 
because object treats each key as a string whether it's a number value, boolean value or any other primitive value.

eg : map.set(1,"ranjan") //obj treats key 1 as string


Use objects when there is logic that operates on individual elements.
eg: behavior of objects

_______________________________________________________________________________________________________________________
weakmap : similar to weakreference in python, helpful for tracking obj which are eligible for garbage collection.

The WeakMap object is a collection of key/value pairs in which the keys are objects only and the values can be arbitrary values. 
The object references in the keys are held weakly, 
meaning that they are a target of garbage collection (GC) if there is no other reference to the object anymore. 
The WeakMap API is the same as the Map API.

One difference to Map objects is that WeakMap keys are not enumerable
(i.e., there is no method giving you a list of the keys). 
If they were, the list would depend on the state of garbage collection, introducing non-determinism.

_________________________________________________________________________________________________________________________

Set : similar to java , unique elements. unless java, javascript maintain order of elements.

Set objects are collections of values. 
You can iterate its elements in insertion order. 
A value in a Set may only occur once; it is unique in the Set's collection.

eg:

var mySet = new Set();
mySet.add(1);
mySet.add('some text');
mySet.add('foo');

mySet.has(1); // true
mySet.delete('foo');
mySet.size; // 2

for (let item of mySet) console.log(item);
// 1
// "some text"

________________________________________________________________________________________________________________________

conversion betwee array and set

Array.from(mySet);
[...mySet2];

mySet2 = new Set([1, 2, 3, 4]);


Note : array allows duplicates whereas set doesn't
mySet2 = new Set([2,2,2,2]);
>>> mySet2.size
>>> 1

